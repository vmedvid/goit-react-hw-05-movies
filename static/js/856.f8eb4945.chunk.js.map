{"version":3,"file":"static/js/856.f8eb4945.chunk.js","mappings":"qPAEaA,EAAqBC,EAAAA,EAAAA,IAAH,sKAUlBC,EAAYD,EAAAA,EAAAA,IAAH,8LAWTE,EAAaF,EAAAA,EAAAA,IAAH,gIAQVG,EAAYH,EAAAA,EAAAA,IAAH,2G,SCvBTI,EAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB,OACE,SAACN,EAAD,UACGM,GACCA,EAAOC,KAAI,SAAAC,GAAI,OACb,UAACN,EAAD,YACE,gBACEO,MAAO,IACPC,IAAG,+CAA0CF,EAAKG,cAClDC,IAAKJ,EAAKK,QAEZ,SAACV,EAAD,UAAaK,EAAKK,QAClB,UAACT,EAAD,yBAAuBI,EAAKM,eAPdN,EAAKO,GADR,KAatB,ECMD,EA1Ba,WACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GACLI,MAAK,SAAAC,GAEJN,EAAQM,EACT,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACP,KAGF,+BACO,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMY,QAAS,GACd,SAACxB,EAAD,CAAUC,OAAQW,IADnB,gEAON,C,+LC3BKa,EAAW,gCACXC,EAAU,mCAKT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,EADpB,iBALZ,IAIN,cACCG,EADD,yBAIEA,EAASV,KAAKW,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,8BACYO,EADZ,wCACmDN,EADnD,iBAZZ,IAWN,cACCG,EADD,yBAIEA,EAASV,KAAKW,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BnB,GAA5B,uFACkBc,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDX,EADC,oBACkBY,IAFpC,cACCG,EADD,yBAIEA,EAASV,MAJX,kEAOA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAAuBP,GAAvB,uFACkBkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDf,EADC,4BACqBgB,IAFvC,cACCG,EADD,yBAIEA,EAASV,KAAKP,MAJhB,kEAOA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAA0BxB,GAA1B,uFACkBkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDf,EADC,4BACqBgB,IAFvC,cACCG,EADD,yBAIEA,EAASV,KAAKW,SAJhB,kE","sources":["components/CastCard/CastCard.styled.jsx","components/CastCard/CastCard.jsx","components/Cast/Cast.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ActorCardContainer = styled.div`\n  margin: 15px 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-content: center;\n  gap: 20px;\n  padding: 5px;\n`;\n\nexport const ActorCard = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 150px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: #ecdbdb;\n`;\n\nexport const ActorTitle = styled.div`\n  margin: 5px 0;\n  padding: 2px 10px;\n  text-align: center;\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nexport const ActorRole = styled.div`\n  margin: 5px 0;\n  padding: 2px 10px;\n  text-align: center;\n  font-size: 14px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ActorCard,\n  ActorCardContainer,\n  ActorTitle,\n  ActorRole,\n} from './CastCard.styled';\n\nexport const CastCard = ({ inCast }) => {\n  return (\n    <ActorCardContainer>\n      {inCast &&\n        inCast.map(elem => (\n          <ActorCard key={elem.id}>\n            <img\n              width={150}\n              src={`https://www.themoviedb.org/t/p/w500//${elem.profile_path}`}\n              alt={elem.name}\n            ></img>\n            <ActorTitle>{elem.name}</ActorTitle>\n            <ActorRole>Character: {elem.character}</ActorRole>\n          </ActorCard>\n        ))}\n    </ActorCardContainer>\n  );\n};\n\nCastCard.propTypes = {\n  inCast: PropTypes.arrayOf(\n    PropTypes.shape({\n      profile_path: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.number,\n      character: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/API';\nimport { CastCard } from '../CastCard/CastCard';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId)\n      .then(data => {\n        // console.log('data in Cast', data);\n        setCast(data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {cast?.length > 0 ? (\n        <CastCard inCast={cast} />\n      ) : (\n        `Sorry, but we don't have any cast information for this movie`\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '12565cffb0d296cb69d2160e9bc02510';\nconst PAGE = 1;\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingFilms() {\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/week?api_key=${API_KEY}&page=${PAGE}`\n  );\n  return response.data.results;\n}\n\nexport async function getFilms(request) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${request}&include_adult=false&api_key=${API_KEY}&page=${PAGE}`\n  );\n  return response.data.results;\n}\n\nexport async function getMovieById(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function getReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n"],"names":["ActorCardContainer","styled","ActorCard","ActorTitle","ActorRole","CastCard","inCast","map","elem","width","src","profile_path","alt","name","character","id","useState","cast","setCast","movieId","useParams","useEffect","getCast","then","data","catch","error","console","log","length","BASE_URL","API_KEY","getTrendingFilms","axios","response","results","getFilms","request","getMovieById","getReviews"],"sourceRoot":""}