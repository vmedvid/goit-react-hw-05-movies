{"version":3,"file":"static/js/43.2d2b9588.chunk.js","mappings":"yRAEaA,EAAgBC,EAAAA,EAAAA,IAAH,sPAYbC,EAASD,EAAAA,EAAAA,IAAH,+C,SCXNE,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAGxBC,EAOED,EAPFC,YACAC,EAMEF,EANFE,MACAC,EAKEH,EALFG,KACAC,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,aACAC,EAEEN,EAFFM,SACAC,EACEP,EADFO,OAEF,OACE,UAACX,EAAD,YACE,SAACE,EAAD,CACEU,MAAO,IACPC,IAAG,+CAA0CR,GAC7CS,IAAKR,GAASC,KAEhB,4BACE,0BACGD,GACD,iCAASE,EAAaO,UAAU,EAAG,GAAnC,WAEF,yCAAiBN,EAAaO,QAAQ,OACtC,sCACA,uBAAIN,KACJ,oCACA,gCAAQC,EAAOM,KAAI,qBAAGV,IAAH,IAAoBW,KAAK,cAInD,E,SC1BYC,GAAalB,EAAAA,EAAAA,GAAOmB,EAAAA,GAAPnB,CAAH,qNA2DvB,EA7CqB,WAAO,IAAD,EACjBoB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAa9C,OAXAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaZ,GACVa,MAAK,SAAAC,GAEJV,EAASU,EACV,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAAChB,KAGF,6BACE,UAACF,EAAD,CAAYqB,GAAIZ,EAAOa,QAAvB,WACE,SAAC,MAAD,CAAmBC,KAAM,KAD3B,cAGClB,IACC,iCACE,SAACrB,EAAD,CAAWC,KAAMoB,KACjB,mDACA,2BACE,yBACE,SAACL,EAAD,CAAYqB,GAAI,OAAhB,qBAEF,yBACE,SAACrB,EAAD,CAAYqB,GAAI,UAAhB,2BAGJ,SAAC,EAAAG,SAAD,WACE,SAAC,KAAD,WAMX,C,+LC/DKC,EAAW,gCACXC,EAAU,mCAKT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,EADpB,iBALZ,IAIN,cACCG,EADD,yBAIEA,EAASb,KAAKc,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,uFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,8BACYO,EADZ,wCACmDN,EADnD,iBAZZ,IAWN,cACCG,EADD,yBAIEA,EAASb,KAAKc,SAJhB,kEAOA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BZ,GAA5B,uFACkB0B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDvB,EADC,oBACkBwB,IAFpC,cACCG,EADD,yBAIEA,EAASb,MAJX,kEAOA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAAuBC,GAAvB,uFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BACqBR,IAFvC,cACCG,EADD,yBAIEA,EAASb,KAAKmB,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,uFACkBN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDS,EADC,4BACqBR,IAFvC,cACCG,EADD,yBAIEA,EAASb,KAAKc,SAJhB,kE","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CardContainer = styled.div`\n  margin: 15px 0;\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  padding: 5px;\n  background-color: #ecdbdb;\n  border-radius: 5px;\n  /* border-top: 1px solid #b92f2c;\n  border-bottom: 1px solid #b92f2c; */\n`;\n\nexport const Poster = styled.img`\n  border-radius: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { CardContainer, Poster } from './MovieCard.styled';\n\nexport const MovieCard = ({ film }) => {\n  //   console.log('film', film);\n  const {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = film;\n  return (\n    <CardContainer>\n      <Poster\n        width={250}\n        src={`https://www.themoviedb.org/t/p/w500//${poster_path}`}\n        alt={title || name}\n      ></Poster>\n      <div>\n        <h2>\n          {title}\n          <span> ({release_date.substring(0, 4)})</span>\n        </h2>\n        <p>User rating: {vote_average.toFixed(1)}</p>\n        <h4>Overview</h4>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <span> {genres.map(({ name }) => name).join(', ')}</span>\n      </div>\n    </CardContainer>\n  );\n};\n\nMovieCard.propTypes = {\n  film: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { getMovieById } from 'services/API';\nimport { Link } from 'react-router-dom';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport styled from '@emotion/styled';\nimport { FaAngleDoubleLeft } from 'react-icons/fa';\n\nexport const StyledLink = styled(Link)`\n  align-items: center;\n  display: flex;\n  gap: 10px;\n  text-decoration: none;\n  color: black;\n  &.active {\n  }\n  :hover {\n    color: #b92f2c;\n    text-decoration: underline;\n  }\n`;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  // console.log('movieId', movieId);\n\n  const location = useLocation();\n  const goBack = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(data => {\n        // console.log('data', data);\n        setMovie(data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return (\n    <main>\n      <StyledLink to={goBack.current}>\n        <FaAngleDoubleLeft size={16} /> Go back\n      </StyledLink>\n      {movie && (\n        <>\n          <MovieCard film={movie} />\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <StyledLink to={'cast'}>Cast</StyledLink>\n            </li>\n            <li>\n              <StyledLink to={'reviews'}>Reviews</StyledLink>\n            </li>\n          </ul>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '12565cffb0d296cb69d2160e9bc02510';\nconst PAGE = 1;\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingFilms() {\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/week?api_key=${API_KEY}&page=${PAGE}`\n  );\n  return response.data.results;\n}\n\nexport async function getFilms(request) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${request}&include_adult=false&api_key=${API_KEY}&page=${PAGE}`\n  );\n  return response.data.results;\n}\n\nexport async function getMovieById(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n}\n\nexport async function getReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n}\n"],"names":["CardContainer","styled","Poster","MovieCard","film","poster_path","title","name","release_date","vote_average","overview","genres","width","src","alt","substring","toFixed","map","join","StyledLink","Link","movieId","useParams","useState","movie","setMovie","location","useLocation","goBack","useRef","state","from","useEffect","getMovieById","then","data","catch","error","console","log","to","current","size","Suspense","BASE_URL","API_KEY","getTrendingFilms","axios","response","results","getFilms","request","getCast","id","cast","getReviews"],"sourceRoot":""}